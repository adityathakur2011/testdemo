Here's a Python script that generates a Markdown README file for a Git project. The script defines essential sections, including the project title, description, installation instructions, usage, and contribution guidelines.

```python
# This script generates a basic README.md file.

def generate_readme(project_name, description, usage, installation, contribution, license_text):
    # Creating the content for the README in markdown format.
    readme_content = f"""
# {project_name}

## Description
{description}

## Installation
```bash
{installation}
```

## Usage
```bash
{usage}
```

## Contributing
{contribution}

## License
{license_text}
"""

    # Writing the content to README.md file
    with open("README.md", "w") as readme_file:
        readme_file.write(readme_content)
    print("README.md file has been generated!")

# Define your project information
project_name = "Sample Project"
description = "This project is a sample demonstration of creating a README file."
usage = "python main.py"
installation = "pip install -r requirements.txt"
contribution = "Contributions are welcome! Please refer to the CONTRIBUTING.md file for guidelines."
license_text = "This project is licensed under the MIT License."

generate_readme(project_name, description, usage, installation, contribution, license_text)
```

**Explanation:**

- The `generate_readme` function takes in six parameters: project name, description, usage instructions, installation commands, contribution guidelines, and license text.
- It builds a multi-line string `readme_content` in Markdown format, organizing each section with appropriate headers.
- The function writes this string to a file named `README.md`.
- You can customize the `project_name`, `description`, `usage`, `installation`, `contribution`, and `license_text` variables as needed for your specific project.
- Finally, the script will write this information to a file named `README.md` in the current directory and print a confirmation message.