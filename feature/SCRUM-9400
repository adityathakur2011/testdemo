```python
from flask import Flask, request, jsonify
from werkzeug.security import check_password_hash

app = Flask(__name__)

# Dummy user data
users = {"admin": "pbkdf2:sha256:150000$xyz$abcdef12345"}

@app.route('/login', methods=['POST'])
def login():
    data = request.json
    username = data.get('username')
    password = data.get('password')

    if username in users and check_password_hash(users[username], password):
        return jsonify({"message": "Login successful!"}), 200
    return jsonify({"error": "Invalid credentials"}), 401

if __name__ == '__main__':
    app.run(debug=True)
```

This code sets up a basic Flask REST API with a `/login` endpoint that checks the username and password against a preset hash using `werkzeug.security.check_password_hash`. The application returns a success message if the credentials are correct and an error if they fail.