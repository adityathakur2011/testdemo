```python
from flask import Flask, request, jsonify
from werkzeug.security import check_password_hash

app = Flask(__name__)

# Dummy user data
users = {
    "user1": "pbkdf2:sha256:150000$aHashedPassword",  # Prehashed password
}

@app.route('/login', methods=['POST'])
def login():
    data = request.get_json()
    username = data.get('username')
    password = data.get('password')

    if username not in users:
        return jsonify({"message": "User not found"}), 404
    
    # Verify password
    if check_password_hash(users[username], password):
        return jsonify({"message": "Login successful"}), 200
    else:
        return jsonify({"message": "Invalid credentials"}), 401

if __name__ == '__main__':
    app.run(debug=True)
```

This Python code uses Flask to create a REST API endpoint for login. It checks the username against stored credentials and verifies passwords using `werkzeug.security`. The application returns appropriate JSON responses for user authentication outcomes.