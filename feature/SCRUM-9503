```python
from flask import Flask, session, redirect, url_for, request

app = Flask(__name__)

# Secret key for session encryption
app.secret_key = 'supersecretkey'


# Dummy route for login to create a session
@app.route('/login', methods=['POST'])
def login():
    # Assume user is authenticated
    session['user_id'] = request.form.get('user_id')
    return "User logged in"


# Route to log out and invalidate the session
@app.route('/logout', methods=['POST'])
def logout():
    # Invalidate the session on the server-side
    session.pop('user_id', None)

    # Clear the session data to ensure no residual data
    session.clear()
    
    # Redirect to the login or home page
    return redirect(url_for('login'))


if __name__ == '__main__':
    app.run(debug=True)
```

Explanation:
- This code uses Flask to manage user sessions.
- A session is created upon login with a dummy user_id to simulate user authentication.
- The logout route is responsible for securely terminating the user's session.
- `session.pop('user_id', None)`: Ensures that the specific session key is removed.
- `session.clear()`: Further ensures all session data is cleared to prevent data leakage.
- Redirection after logout helps confirm that the session has ended and the user should log in again to access secured functionalities.